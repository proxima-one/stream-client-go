// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: stream_producer/v1alpha1/stream_producer.proto

package stream_producerv1alpha1

import (
	v1 "github.com/proxima-one/streamdb-client-go/proto/gen/proto/go/model/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProducerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputStreams  []*v1.StreamStateRef `protobuf:"bytes,1,rep,name=input_streams,json=inputStreams,proto3" json:"input_streams,omitempty"`
	OutputStreams []*v1.StreamStateRef `protobuf:"bytes,2,rep,name=output_streams,json=outputStreams,proto3" json:"output_streams,omitempty"`
}

func (x *ProducerState) Reset() {
	*x = ProducerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProducerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProducerState) ProtoMessage() {}

func (x *ProducerState) ProtoReflect() protoreflect.Message {
	mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProducerState.ProtoReflect.Descriptor instead.
func (*ProducerState) Descriptor() ([]byte, []int) {
	return file_stream_producer_v1alpha1_stream_producer_proto_rawDescGZIP(), []int{0}
}

func (x *ProducerState) GetInputStreams() []*v1.StreamStateRef {
	if x != nil {
		return x.InputStreams
	}
	return nil
}

func (x *ProducerState) GetOutputStreams() []*v1.StreamStateRef {
	if x != nil {
		return x.OutputStreams
	}
	return nil
}

type Producer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State       *ProducerState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	UpdateToken string         `protobuf:"bytes,2,opt,name=update_token,json=updateToken,proto3" json:"update_token,omitempty"`
}

func (x *Producer) Reset() {
	*x = Producer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Producer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Producer) ProtoMessage() {}

func (x *Producer) ProtoReflect() protoreflect.Message {
	mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Producer.ProtoReflect.Descriptor instead.
func (*Producer) Descriptor() ([]byte, []int) {
	return file_stream_producer_v1alpha1_stream_producer_proto_rawDescGZIP(), []int{1}
}

func (x *Producer) GetState() *ProducerState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *Producer) GetUpdateToken() string {
	if x != nil {
		return x.UpdateToken
	}
	return ""
}

type StreamEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string      `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Events   []*v1.Event `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *StreamEvents) Reset() {
	*x = StreamEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvents) ProtoMessage() {}

func (x *StreamEvents) ProtoReflect() protoreflect.Message {
	mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvents.ProtoReflect.Descriptor instead.
func (*StreamEvents) Descriptor() ([]byte, []int) {
	return file_stream_producer_v1alpha1_stream_producer_proto_rawDescGZIP(), []int{2}
}

func (x *StreamEvents) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *StreamEvents) GetEvents() []*v1.Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type CreateProducerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OutputStreams []string `protobuf:"bytes,2,rep,name=output_streams,json=outputStreams,proto3" json:"output_streams,omitempty"`
	Force         bool     `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	UserData      []byte   `protobuf:"bytes,4,opt,name=user_data,json=userData,proto3,oneof" json:"user_data,omitempty"`
}

func (x *CreateProducerRequest) Reset() {
	*x = CreateProducerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProducerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProducerRequest) ProtoMessage() {}

func (x *CreateProducerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProducerRequest.ProtoReflect.Descriptor instead.
func (*CreateProducerRequest) Descriptor() ([]byte, []int) {
	return file_stream_producer_v1alpha1_stream_producer_proto_rawDescGZIP(), []int{3}
}

func (x *CreateProducerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateProducerRequest) GetOutputStreams() []string {
	if x != nil {
		return x.OutputStreams
	}
	return nil
}

func (x *CreateProducerRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *CreateProducerRequest) GetUserData() []byte {
	if x != nil {
		return x.UserData
	}
	return nil
}

type CreateProducerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Producer *Producer `protobuf:"bytes,1,opt,name=producer,proto3" json:"producer,omitempty"`
}

func (x *CreateProducerResponse) Reset() {
	*x = CreateProducerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProducerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProducerResponse) ProtoMessage() {}

func (x *CreateProducerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProducerResponse.ProtoReflect.Descriptor instead.
func (*CreateProducerResponse) Descriptor() ([]byte, []int) {
	return file_stream_producer_v1alpha1_stream_producer_proto_rawDescGZIP(), []int{4}
}

func (x *CreateProducerResponse) GetProducer() *Producer {
	if x != nil {
		return x.Producer
	}
	return nil
}

type GetProducerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProducerRequest) Reset() {
	*x = GetProducerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProducerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProducerRequest) ProtoMessage() {}

func (x *GetProducerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProducerRequest.ProtoReflect.Descriptor instead.
func (*GetProducerRequest) Descriptor() ([]byte, []int) {
	return file_stream_producer_v1alpha1_stream_producer_proto_rawDescGZIP(), []int{5}
}

func (x *GetProducerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProducerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Producer *Producer `protobuf:"bytes,1,opt,name=producer,proto3" json:"producer,omitempty"`
}

func (x *GetProducerResponse) Reset() {
	*x = GetProducerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProducerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProducerResponse) ProtoMessage() {}

func (x *GetProducerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProducerResponse.ProtoReflect.Descriptor instead.
func (*GetProducerResponse) Descriptor() ([]byte, []int) {
	return file_stream_producer_v1alpha1_stream_producer_proto_rawDescGZIP(), []int{6}
}

func (x *GetProducerResponse) GetProducer() *Producer {
	if x != nil {
		return x.Producer
	}
	return nil
}

type ProduceEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateToken   string          `protobuf:"bytes,1,opt,name=update_token,json=updateToken,proto3" json:"update_token,omitempty"`
	ProducerState *ProducerState  `protobuf:"bytes,2,opt,name=producer_state,json=producerState,proto3" json:"producer_state,omitempty"`
	StreamEvents  []*StreamEvents `protobuf:"bytes,3,rep,name=stream_events,json=streamEvents,proto3" json:"stream_events,omitempty"`
}

func (x *ProduceEventsRequest) Reset() {
	*x = ProduceEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceEventsRequest) ProtoMessage() {}

func (x *ProduceEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceEventsRequest.ProtoReflect.Descriptor instead.
func (*ProduceEventsRequest) Descriptor() ([]byte, []int) {
	return file_stream_producer_v1alpha1_stream_producer_proto_rawDescGZIP(), []int{7}
}

func (x *ProduceEventsRequest) GetUpdateToken() string {
	if x != nil {
		return x.UpdateToken
	}
	return ""
}

func (x *ProduceEventsRequest) GetProducerState() *ProducerState {
	if x != nil {
		return x.ProducerState
	}
	return nil
}

func (x *ProduceEventsRequest) GetStreamEvents() []*StreamEvents {
	if x != nil {
		return x.StreamEvents
	}
	return nil
}

type ProduceEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateToken string `protobuf:"bytes,1,opt,name=update_token,json=updateToken,proto3" json:"update_token,omitempty"`
}

func (x *ProduceEventsResponse) Reset() {
	*x = ProduceEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceEventsResponse) ProtoMessage() {}

func (x *ProduceEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceEventsResponse.ProtoReflect.Descriptor instead.
func (*ProduceEventsResponse) Descriptor() ([]byte, []int) {
	return file_stream_producer_v1alpha1_stream_producer_proto_rawDescGZIP(), []int{8}
}

func (x *ProduceEventsResponse) GetUpdateToken() string {
	if x != nil {
		return x.UpdateToken
	}
	return ""
}

var File_stream_producer_v1alpha1_stream_producer_proto protoreflect.FileDescriptor

var file_stream_producer_v1alpha1_stream_producer_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x18, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x14, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x66, 0x52, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x12, 0x3f, 0x0a, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x66, 0x52, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x73, 0x22, 0x6c, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x12, 0x3d,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x54, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x55, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x72, 0x22, 0xd6, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x4e, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x4b, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x0c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x3a, 0x0a,
	0x15, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0xf0, 0x02, 0x0a, 0x15, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x72, 0x12, 0x2f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x9f, 0x02, 0x0a,
	0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x13, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x6d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x61, 0x2d, 0x6f, 0x6e, 0x65, 0x2f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x64, 0x62, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2d, 0x67, 0x6f, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa, 0x02, 0x17, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0xca, 0x02, 0x17, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x23,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5c, 0x56,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x18, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stream_producer_v1alpha1_stream_producer_proto_rawDescOnce sync.Once
	file_stream_producer_v1alpha1_stream_producer_proto_rawDescData = file_stream_producer_v1alpha1_stream_producer_proto_rawDesc
)

func file_stream_producer_v1alpha1_stream_producer_proto_rawDescGZIP() []byte {
	file_stream_producer_v1alpha1_stream_producer_proto_rawDescOnce.Do(func() {
		file_stream_producer_v1alpha1_stream_producer_proto_rawDescData = protoimpl.X.CompressGZIP(file_stream_producer_v1alpha1_stream_producer_proto_rawDescData)
	})
	return file_stream_producer_v1alpha1_stream_producer_proto_rawDescData
}

var file_stream_producer_v1alpha1_stream_producer_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_stream_producer_v1alpha1_stream_producer_proto_goTypes = []interface{}{
	(*ProducerState)(nil),          // 0: stream_producer.v1alpha1.ProducerState
	(*Producer)(nil),               // 1: stream_producer.v1alpha1.Producer
	(*StreamEvents)(nil),           // 2: stream_producer.v1alpha1.StreamEvents
	(*CreateProducerRequest)(nil),  // 3: stream_producer.v1alpha1.CreateProducerRequest
	(*CreateProducerResponse)(nil), // 4: stream_producer.v1alpha1.CreateProducerResponse
	(*GetProducerRequest)(nil),     // 5: stream_producer.v1alpha1.GetProducerRequest
	(*GetProducerResponse)(nil),    // 6: stream_producer.v1alpha1.GetProducerResponse
	(*ProduceEventsRequest)(nil),   // 7: stream_producer.v1alpha1.ProduceEventsRequest
	(*ProduceEventsResponse)(nil),  // 8: stream_producer.v1alpha1.ProduceEventsResponse
	(*v1.StreamStateRef)(nil),      // 9: model.v1.StreamStateRef
	(*v1.Event)(nil),               // 10: model.v1.Event
}
var file_stream_producer_v1alpha1_stream_producer_proto_depIdxs = []int32{
	9,  // 0: stream_producer.v1alpha1.ProducerState.input_streams:type_name -> model.v1.StreamStateRef
	9,  // 1: stream_producer.v1alpha1.ProducerState.output_streams:type_name -> model.v1.StreamStateRef
	0,  // 2: stream_producer.v1alpha1.Producer.state:type_name -> stream_producer.v1alpha1.ProducerState
	10, // 3: stream_producer.v1alpha1.StreamEvents.events:type_name -> model.v1.Event
	1,  // 4: stream_producer.v1alpha1.CreateProducerResponse.producer:type_name -> stream_producer.v1alpha1.Producer
	1,  // 5: stream_producer.v1alpha1.GetProducerResponse.producer:type_name -> stream_producer.v1alpha1.Producer
	0,  // 6: stream_producer.v1alpha1.ProduceEventsRequest.producer_state:type_name -> stream_producer.v1alpha1.ProducerState
	2,  // 7: stream_producer.v1alpha1.ProduceEventsRequest.stream_events:type_name -> stream_producer.v1alpha1.StreamEvents
	3,  // 8: stream_producer.v1alpha1.StreamProducerService.CreateProducer:input_type -> stream_producer.v1alpha1.CreateProducerRequest
	5,  // 9: stream_producer.v1alpha1.StreamProducerService.GetProducer:input_type -> stream_producer.v1alpha1.GetProducerRequest
	7,  // 10: stream_producer.v1alpha1.StreamProducerService.ProduceEvents:input_type -> stream_producer.v1alpha1.ProduceEventsRequest
	4,  // 11: stream_producer.v1alpha1.StreamProducerService.CreateProducer:output_type -> stream_producer.v1alpha1.CreateProducerResponse
	6,  // 12: stream_producer.v1alpha1.StreamProducerService.GetProducer:output_type -> stream_producer.v1alpha1.GetProducerResponse
	8,  // 13: stream_producer.v1alpha1.StreamProducerService.ProduceEvents:output_type -> stream_producer.v1alpha1.ProduceEventsResponse
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_stream_producer_v1alpha1_stream_producer_proto_init() }
func file_stream_producer_v1alpha1_stream_producer_proto_init() {
	if File_stream_producer_v1alpha1_stream_producer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProducerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Producer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProducerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProducerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProducerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProducerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_stream_producer_v1alpha1_stream_producer_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stream_producer_v1alpha1_stream_producer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stream_producer_v1alpha1_stream_producer_proto_goTypes,
		DependencyIndexes: file_stream_producer_v1alpha1_stream_producer_proto_depIdxs,
		MessageInfos:      file_stream_producer_v1alpha1_stream_producer_proto_msgTypes,
	}.Build()
	File_stream_producer_v1alpha1_stream_producer_proto = out.File
	file_stream_producer_v1alpha1_stream_producer_proto_rawDesc = nil
	file_stream_producer_v1alpha1_stream_producer_proto_goTypes = nil
	file_stream_producer_v1alpha1_stream_producer_proto_depIdxs = nil
}
